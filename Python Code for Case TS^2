import numpy as np
from scipy.optimize import minimize

# Case 1: TS^2 - Tangent space to the sphere

def K_biort_TS2(theta, phi, c, K_S2):
    f1 = c * np.sin(theta) * np.cos(phi)
    grad_f1_sq = c**2 * (np.cos(theta)**2 * np.cos(phi)**2 + np.sin(phi)**2)
    hessian_f1 = c * np.cos(phi) * (np.cos(theta)**2 - 2 * np.sin(theta))
    return 0.5 * np.exp(-2 * f1) * (K_S2 - hessian_f1 + grad_f1_sq)

# Function to minimize (find the minimum absolute value of K_biort)
def min_K_biort_TS2(params):
    c = params[0]
    theta_vals = np.linspace(0, np.pi, 100)
    phi_vals = np.linspace(0, 2*np.pi, 100)
    theta_grid, phi_grid = np.meshgrid(theta_vals, phi_vals)
    K_vals = K_biort_TS2(theta_grid, phi_grid, c, 50)  # K_S2 = 50
    return -np.min(K_vals)  # We want to maximize the minimum, so minimize the negative

# Initial condition
init_params = np.array([20])  # c = 20 as initial guess

# Optimization
result_TS2 = minimize(min_K_biort_TS2, init_params, method='SLSQP')

print("Minimum absolute K_biort:", min_K_TS2)
