import numpy as np
import scipy.optimize as opt

# Fixed parameters
a = 5  
b = 2  

# Function f2 and its derivatives (for T^2)
def f2(y1, y2):
    return a * y1 + b * (np.sin(y1)**2 + np.cos(y2)**2)

def grad_f2_squared(y1, y2):
    return (a + 2 * b * np.sin(y1) * np.cos(y1))**2 + (2 * b * np.sin(y2) * np.cos(y2))**2

def hess_f2(y1, y2):
    return 2 * b * (np.cos(2 * y1) + np.cos(2 * y2))

# Biorthogonal curvature function for TT^2 planes
def K_biort_TT2(vars):
    y1, y2 = vars
    f2_val = f2(y1, y2)
    grad_sq = grad_f2_squared(y1, y2)
    hess_val = hess_f2(y1, y2)
    return 0.5 * np.exp(-2 * f2_val) * (-hess_val + grad_sq)

# Optimization bounds
bounds_TT2 = [(0, 2 * np.pi), (0, 2 * np.pi)]

# Global optimization with Differential Evolution
result_de_TT2 = opt.differential_evolution(K_biort_TT2, bounds_TT2, strategy='best1bin', tol=1e-12, maxiter=1000, seed=42)


# Print final results
print("K_biort minimum:", result_de_TT2.fun)
